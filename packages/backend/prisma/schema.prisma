// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Persoon {
  id                  Int            @id @default(autoincrement())
  voornaam            String?        @db.VarChar(255)
  achternaam          String         @db.VarChar(255)
  emailadres          String?        @db.VarChar(255)
  geboortedatum       DateTime?      @db.Date
  geboorteplaats      String?        @db.VarChar(255)
  geslacht            Geslacht       @default(onbekend)
  rekeningnummer      String?        @db.VarChar(255)
  rijksregisternummer String?        @db.VarChar(255)
  telefoonnummer      String?        @db.VarChar(255)
  gsmNummer           String?        @db.VarChar(255)
  // communicatievoorkeur Communicatievoorkeur @default(post)
  type                PersoonType    @default(deelnemer)
  inschrijving        Inschrijving[]

  // Deelnemer
  woonsituatie          Woonsituatie     @default(onbekend)
  woonsituatieOpmerking String?
  werksituatie          Werksituatie     @default(onbekend)
  opleidingsvorm        Opleidingsvorm?
  werksituatieOpmerking String?
  voedingswens          Voedingswens     @default(geen)
  voedingswensOpmerking String?
  Contactpersonen       Contactpersoon[]
  Deelnames             Deelname[]

  // OverigePersonen
  vrijwilligerOpmerking String?
  selectie              OverigPersoonSelectie[]

  @@map("persoon")
}

model Contactpersoon {
  id             Int     @id @default(autoincrement())
  deelnemer      Persoon @relation(fields: [deelnemerId], references: [id])
  deelnemerId    Int
  naam           String
  telefoonnummer String?
  emailadres     String?
}

model Project {
  id            Int         @id @default(autoincrement())
  projectnummer String      @unique @db.VarChar(255)
  type          ProjectType
  naam          String      @db.VarChar(255)

  // Cursus
  organisatieonderdeel Organisatieonderdeel?
  overnachting         Boolean?

  activiteiten   Activiteit[]
  inschrijvingen Inschrijving[]
  @@map("project")
}

model Inschrijving {
  id        Int     @id @default(autoincrement())
  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
  persoonId Int
  persoon   Persoon @relation(fields: [persoonId], references: [id])
  opmerking String? @db.VarChar(255)

  tijdstipVanInschrijving        DateTime  @default(now())
  tijdstipVanAnnuleren           DateTime?
  tijdstipVanBevestiging         DateTime?
  tijdstipVerzendenVervoersbrief DateTime?
  toestemmingFotos               Boolean   @default(false)
  wachtlijst                     Boolean   @default(false)

  @@map("inschrijving")
}

model Activiteit {
  id           Int      @id @default(autoincrement())
  project      Project  @relation(fields: [projectId], references: [id])
  projectId    Int
  van          DateTime @db.Date
  totEnMet     DateTime @db.Date
  vormingsuren Float?

  deelnames Deelname[]
  @@map("activiteit")
}

model Deelname {
  id                         Int        @id @default(autoincrement())
  deelnemer                  Persoon    @relation(fields: [deelnemerId], references: [id])
  deelnemerId                Int
  activiteit                 Activiteit @relation(fields: [activiteitId], references: [id])
  activiteitId               Int
  effectieveDeelnamePerunage Float

  @@map("deelname")
}

model Organisatie {
  id                   Int                   @id @default(autoincrement())
  naam                 String                @unique @db.VarChar(255)
  terAttentieVan       String?               @db.VarChar(255)
  emailadres           String?               @db.VarChar(255)
  opmerking            String?               @db.VarChar(255)
  doelgroep            Doelgroep
  telefoonnummer       String?
  website              String?               @db.VarChar(255)
  folderVoorkeur       FolderSelectie[]
  communicatieVoorkeur CommunicatieVoorkeur?
}

enum CommunicatieVoorkeur {
  post
  email

  @@map("communicatie_voorkeur")
}

enum FolderSelectie {
  deKeiCursussen
  deKeiZomervakanties
  deKeiWintervakanties
  KeiJongNietBuso
  KeiJongBuso
}

enum ProjectType {
  cursus
  vakantie

  @@map("project_type")
}

enum OverigPersoonSelectie {
  algemeneVergaderingKeiJong
  algemeneVergaderingDeKei
  overheid
  personeel
  vakantieVrijwilliger

  @@map("overig_persoon_selectie")
}

enum Organisatieonderdeel {
  keiJongBuSO
  keiJongNietBuSO
  deKei

  @@map("organisatieonderdeel")
}

enum PersoonType {
  deelnemer
  overigPersoon

  @@map("persoon_type")
}

enum Geslacht {
  onbekend
  man
  vrouw

  @@map("geslacht")
}

enum Woonsituatie {
  onbekend
  thuisZonderProfessioneleBegeleiding
  thuisMetProfessioneleBegeleiding
  residentieleWoonondersteuning
  zelfstandigZonderProfessioneleBegeleiding
  zelfstandigMetProfessioneleBegeleiding

  @@map("woonsituatie")
}

enum Opleidingsvorm {
  onbekend
  opleidingsvorm1
  opleidingsvorm2
  opleidingsvorm3
  alternerendeBeroepsopleiding
  regulierOnderwijsMetExtraOndersteuning

  @@map("opleidingsvorm")
}

enum Werksituatie {
  onbekend
  school
  dagbesteding
  vrijwilligerswerk
  maatwerkbedrijf
  arbeidszorg
  arbeidstrajectbegeleiding
  reguliereArbeidscircuit
  pensioen
  werkzoekend

  @@map("werksituatie")
}

enum Voedingswens {
  geen
  vegetarisch
  halal
  andere

  @@map("voedingswens")
}

enum Doelgroep {
  deKei
  keiJong

  @@map("doelgroep")
}
